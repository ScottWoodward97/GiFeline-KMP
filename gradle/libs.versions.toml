[versions]
agp = "8.3.2"
kotlin = "2.0.20"
coroutines = "1.9.0"
junit = "4.13.2"
mockk = "1.13.10"
assertj = "3.11.1"
activityCompose = "1.9.3"
appcompat = "1.7.0"
navigation = "2.8.0-alpha10"
turbine = "1.1.0"
coil = "3.0.0-rc02"
ktor = "3.0.0"
koin = "4.0.0"
koinAnnotation = "1.3.1"
ksp = "2.0.21-1.0.26"
compose-plugin = "1.7.0"

[libraries]
kotlin = { group = "org.jetbrains.kotlin", name = "kotlin-stdlib", version.ref = "kotlin" }
coroutines-core = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-android = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-android", version.ref = "coroutines" }
coroutines-test = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-test", version.ref = "coroutines" }
coroutines-swing = { group = "org.jetbrains.kotlinx", name = "kotlinx-coroutines-swing", version.ref = "coroutines" }

junit = { group = "junit", name = "junit", version.ref = "junit" }
mockk = { group = "io.mockk", name = "mockk", version.ref = "mockk" }
assertJ = { group = "org.assertj", name = "assertj-core", version.ref = "assertj" }
androidx-activity-compose = { group = "androidx.activity", name = "activity-compose", version.ref = "activityCompose" }
androidx-navigation-compose = { group = "org.jetbrains.androidx.navigation", name = "navigation-compose", version.ref = "navigation" }
androidx-lifecycle-viewmodel = { group = "androidx.lifecycle", name="lifecycle-viewmodel", version = "2.8.7"}
androidx-viewmodel = { group = "org.jetbrains.androidx.lifecycle", name = "lifecycle-viewmodel-compose", version = "2.8.2" }

androidx-appcompat = { group = "androidx.appcompat", name = "appcompat", version.ref = "appcompat" }
turbine = { group = "app.cash.turbine", name = "turbine", version.ref = "turbine"}
coil = {group = "io.coil-kt.coil3", name="coil", version.ref = "coil"}
coil-compose = {group = "io.coil-kt.coil3", name="coil-compose", version.ref = "coil"}
coil-ktor = {group = "io.coil-kt.coil3", name="coil-network-ktor3", version.ref = "coil"}

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" } # for later iOS support
ktor-client-negotiate = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }

kotlinx-serialization = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version="1.7.3" }

koin-android = { group = "io.insert-koin", name = "koin-android", version.ref="koin"}
koin-android-compose = { group = "io.insert-koin", name = "koin-androidx-compose", version.ref = "koin" }
koin-core = { group = "io.insert-koin", name = "koin-core", version.ref="koin"}
koin-annotations = { group = "io.insert-koin", name = "koin-annotations", version.ref="koinAnnotation"}
koin-compiler = { group = "io.insert-koin", name = "koin-ksp-compiler", version.ref="koinAnnotation"}
koin-compose = { group = "io.insert-koin", name = "koin-compose", version.ref="koin"}
koin-viewmodel = { group = "io.insert-koin", name = "koin-compose-viewmodel", version.ref="koin"}
koin-navigation = { group = "io.insert-koin", name = "koin-compose-viewmodel-navigation", version.ref="koin"}

[plugins]
androidApplication = { id = "com.android.application", version.ref = "agp" }
jetbrainsKotlinAndroid = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
androidLibrary = { id = "com.android.library", version.ref = "agp" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }
ksp = {id = "com.google.devtools.ksp", version.ref="ksp"}
kotlinMultiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
jetbrainsCompose = { id = "org.jetbrains.compose", version.ref = "compose-plugin" }


[bundles]
app = [
    "kotlin",
    "koin-core",
    "koin-annotations",
    "koin-compose",
    "koin-viewmodel",
    "koin-navigation",
]
app-android = [
    "koin-android",
    "koin-android-compose",
    "androidx-appcompat",
    "androidx-activity-compose",
]
app-ksp = [
    "koin-compiler",
]
feature = [
    "kotlin",
    "coroutines-core",
    "androidx-viewmodel",
    "androidx-lifecycle-viewmodel",
    "androidx-navigation-compose",
    "coil",
    "coil-compose",
    "coil-ktor",
    "koin-annotations",
    "koin-compose",
    "koin-viewmodel",
    "koin-navigation",
]
feature-android = [
    "coroutines-android",
    "koin-android",
    "koin-android-compose",
]
feature-desktop = [
    "coroutines-swing",
]
feature-ksp = [
    "koin-compiler",
]
domain = [
    "kotlin",
    "coroutines-core",
    "koin-core",
    "koin-annotations",
]
domain-android = [
    "koin-android",
    "coroutines-android",
]
domain-desktop = [
    "coroutines-swing",
]
domain-ksp = [
    "koin-compiler",
]
data = [
    "kotlin",
    "coroutines-core",
    "ktor-client-core",
    "kotlinx-serialization",
    "ktor-client-negotiate",
    "ktor-client-serialization",
    "ktor-client-logging",
    "koin-core",
    "koin-annotations",
    "ktor-client-okhttp",
]
data-android = [
    "coroutines-android",
    "koin-android",
]
data-desktop = [
    "coroutines-swing",
]
data-ksp = [
    "koin-compiler",
]
data-test = [
    "ktor-client-mock",
]
test = [
    "junit",
    "mockk",
    "assertJ",
    "coroutines-core", #needed for mockk
    "coroutines-test",
    "turbine",
]